@using My.Endpoints
@using VsaTemplate.Web.Features.Todos.Models
@inherits BlazorComponentBase
@rendermode InteractiveServer

@if (_todos is null)
{
    @: Loading...
    return;
}

<div class="level">
    <div class="level-right">
        <label class="checkbox">
            Show Completed
            <input type="checkbox" checked="@_showCompleted"
                   @onchange="@(args => LoadTodos((bool)args.Value!))" />
        </label>
    </div>
</div>

<div class="content">
    <ul>
        @foreach (var t in _todos)
        {
            <li>
                <label>
                    @t.Name
                </label>
            </li>
        }
    </ul>
</div>

@code
{
    [Inject]
    private GetTodos.Handler GetTodos { get; init; } = null!;

    private IReadOnlyList<Todo> _todos = null!;
    private bool _showCompleted;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return Task.CompletedTask;

        return LoadTodos();
    }

    private async Task LoadTodos(bool newState = false)
    {
        _showCompleted = newState;

        _todos = await GetTodos.HandleAsync(new() { ShowCompleted = _showCompleted, });

        StateHasChanged();
    }
}